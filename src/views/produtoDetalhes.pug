//- produto-detalhes.pug
doctype html
html(lang="pt-br")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title= produto.nome
    link(rel="stylesheet", href="/css/style.css")
    style.
      .produto-detalhes-container {
        background-color: #b7410e;
        padding: 20px;
        border-radius: 10px;
        max-width: 1000px;
        margin: 0 auto;
        color: #fff;
      }
      .produto-layout {
        display: flex;
        flex-wrap: wrap;
        gap: 30px;
        align-items: flex-start;
      }
      .carousel {
        flex: 1;
        max-width: 400px;
        position: relative;
      }
      .carousel img {
        width: 100%;
        height: 350px;
        object-fit: contain;
        display: none;
      }
      .carousel img.active {
        display: block;
      }
      .carousel-controls {
        position: absolute;
        top: 50%;
        width: 100%;
        display: flex;
        justify-content: space-between;
        transform: translateY(-50%);
        pointer-events: none;
      }
      .carousel-controls button {
        background: rgba(255, 255, 255, 0.8);
        color: #b7410e;
        border: none;
        padding: 8px 14px;
        border-radius: 5px;
        cursor: pointer;
        pointer-events: auto;
      }
      .produto-info {
        flex: 1;
        min-width: 250px;
        text-align: left;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
      }
      .produto-info p {
        line-height: 1.2;
        margin: 4px 0;
      }
      .opcoes-wrapper {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-bottom: 15px;
      }
      .opcao-btn {
        padding: 5px 12px;
        border: 1px solid #fff;
        border-radius: 5px;
        background: transparent;
        color: #fff;
        cursor: pointer;
        transition: 0.3s;
      }
      .opcao-btn.selected {
        background-color: #fff;
        color: #b7410e;
        font-weight: bold;
      }
      .quantidade-wrapper {
        margin-top: 10px;
        margin-bottom: 15px;
        display: flex;
        align-items: center;
        gap: 10px;
      }
      .quantidade-wrapper label {
        white-space: nowrap;
      }
      .quantidade-wrapper input {
        width: 70px;
        height: 30px;
        border-radius: 5px;
        border: 1px solid #fff;
        text-align: center;
      }
      .btn-carrinho-wrapper {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 10px;
        width: 100%;
        margin-top: 10px;
      }
      .btn-carrinho, .btn-editar, .btn-deletar {
        width: 200px;
        text-align: center;
        padding: 10px 0;
        font-weight: bold;
        border-radius: 5px;
        cursor: pointer;
        background-color: #fff;
        color: #b7410e;
        border: none;
        transition: 0.3s;
      }
      .btn-carrinho:hover, .btn-editar:hover, .btn-deletar:hover {
        background-color: #000;
        color: #fff;
      }

  body
    a(href="/", style="display: inline-block; margin: 20px;")
      button(style="background-color: #b7410e; color: #fff; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer;") Voltar

    main
      .produto-detalhes-container
        .produto-layout
          - const imagens = produto.imagens ? JSON.parse(produto.imagens) : [];
          if imagens.length
            .carousel
              each imgSrc, index in imagens
                img(src=imgSrc, alt=produto.nome + " " + (index + 1), class=(index === 0 ? "active" : ""))
              .carousel-controls
                button(type="button", onclick="prevImg()") ◀
                button(type="button", onclick="nextImg()") ▶
          else
            img(src="/img/placeholder.png", alt="Sem imagem")

          .produto-info
            h1(style="margin-bottom: 10px;")= produto.nome
            p Descrição: #{produto.descricao}
            p.preco R$ #{produto.preco.toFixed(2)}
            if produto.desconto > 0
              p.desconto Desconto: #{produto.desconto} %
            if produto.Categoria
              p Categoria: #{produto.Categoria.nome}

            //- Seleção de cores
            - const cores = produto.cores ? JSON.parse(produto.cores) : [];
            if cores.length
              p Escolha a cor:
              .opcoes-wrapper
                each cor in cores
                  button(type="button", class="opcao-btn", data-type="cor", data-value=cor)= cor

            //- Seleção de tamanhos
            - const tamanhos = produto.tamanhos ? JSON.parse(produto.tamanhos) : [];
            if tamanhos.length
              p Escolha o tamanho:
              .opcoes-wrapper
                each tam in tamanhos
                  button(type="button", class="opcao-btn", data-type="tamanho", data-value=tam)= tam

            .quantidade-wrapper
              label(for="quantidadeInput") Quantidade:
              input#quantidadeInput(type="number", name="quantidade", value="1", min="1", max="100")

            .btn-carrinho-wrapper
              if usuario
                form#formCarrinho(action="/carrinho/adicionar/" + produto.id, method="post")
                  input(type="hidden", name="quantidade", value="1", id="quantidadeHidden")
                  input(type="hidden", name="cor", value="", id="corHidden")
                  input(type="hidden", name="tamanho", value="", id="tamanhoHidden")
                  button(type="submit", class="btn-carrinho") Adicionar ao Carrinho
              else
                a(href="/login")
                  button(type="button", class="btn-carrinho") Adicionar ao Carrinho

              if usuario && usuario.tipo === 'admin'
                a(href="/produtos/" + produto.id + "/editar")
                  button(class="btn-editar") Editar Produto
                form(action="/produtos/" + produto.id + "/deletar", method="post")
                  button(type="submit", class="btn-deletar") Excluir Produto

    script.
      // Carousel
      let currentIndex = 0;
      const imgs = document.querySelectorAll('.carousel img');
      function showImg(index) { imgs.forEach((img, i) => img.classList.toggle('active', i === index)); }
      function prevImg() { if (!imgs.length) return; currentIndex = (currentIndex - 1 + imgs.length) % imgs.length; showImg(currentIndex); }
      function nextImg() { if (!imgs.length) return; currentIndex = (currentIndex + 1) % imgs.length; showImg(currentIndex); }

      // Quantidade dinâmica
      const qInput = document.getElementById('quantidadeInput');
      const qHidden = document.getElementById('quantidadeHidden');
      if (qInput && qHidden) qInput.addEventListener('input', () => qHidden.value = qInput.value);

      // Seleção de cores e tamanhos
      const opcaoBtns = document.querySelectorAll('.opcao-btn');
      const corHidden = document.getElementById('corHidden');
      const tamanhoHidden = document.getElementById('tamanhoHidden');
      opcaoBtns.forEach(btn => {
        btn.addEventListener('click', () => {
          const type = btn.dataset.type;
          const value = btn.dataset.value;

          // Remove seleção anterior do mesmo tipo
          opcaoBtns.forEach(b => { if(b.dataset.type === type) b.classList.remove('selected'); });
          btn.classList.add('selected');

          if(type === 'cor') corHidden.value = value;
          else if(type === 'tamanho') tamanhoHidden.value = value;
        });
      });
